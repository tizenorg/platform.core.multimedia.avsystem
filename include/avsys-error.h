/*
 * avsystem
 *
 * Copyright (c) 2000 - 2011 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact: Jonghyuk Choi <jhchoi.choi@samsung.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#ifndef __AVSYS_ERROR_H__
#define __AVSYS_ERROR_H__

#ifdef __cplusplus
	extern "C" {
#endif

/**
  * AVSYS CLASS
  */
#define AVSYS_STATE_SUCCESS					(0x00000000)					/**< No Error */
#define AVSYS_STATE_ERROR					(0x80000000)					/**< Error Class */
#define AVSYS_STATE_WARING					(0x70000000)					/**< Waring Class */

/*
 * Detail enumeration
 */
enum {
	AVSYS_IN_UNKNOWN = 0,
	AVSYS_IN_PARAMETER,
	AVSYS_IN_HANDLE,
	AVSYS_IN_POINTER,
	AVSYS_IN_VALUE,
	AVSYS_IN_OVERRUN,
	AVSYS_IN_UNDERRUN,
	AVSYS_IN_RANGE_OVER,
	AVSYS_IN_RANGE_UNDER,
	AVSYS_IN_MODE,
	AVSYS_IN_FORMAT,
	AVSYS_IN_CHANNEL,
	AVSYS_IN_SAMPLERATE,
	AVSYS_IN_LAYER,
	AVSYS_IN_ROTATE,
	AVSYS_IN_ALLOC,
	AVSYS_IN_INTERNAL,
	/*Extra state for camera*/
	AVSYS_IN_IO_CONTROL,
	AVSYS_IN_DEVICE,
	AVSYS_IN_WAIT_RES,
	AVSYS_IN_SUPPORT,
	AVSYS_IN_STATE,
	AVSYS_IN_PRIVILEGE,
};

/*
 * AVSYS_WARING
 */
#define AVSYS_STATE_WAR_INVALID_PARAMETER			(AVSYS_STATE_WARING | AVSYS_IN_PARAMETER)
#define AVSYS_STATE_WAR_INVALID_HANDLE				(AVSYS_STATE_WARING | AVSYS_IN_HANDLE)
#define AVSYS_STATE_WAR_INVALID_VALUE				(AVSYS_STATE_WARING | AVSYS_IN_VALUE)
#define AVSYS_STATE_WAR_INVALID_MODE				(AVSYS_STATE_WARING | AVSYS_IN_MODE)
#define AVSYS_STATE_WAR_INVALID_FORMAT				(AVSYS_STATE_WARING | AVSYS_IN_FORMAT)
#define AVSYS_STATE_WAR_INVALID_CHANNEL				(AVSYS_STATE_WARING | AVSYS_IN_CHANNEL)
#define AVSYS_STATE_WAR_INVALID_SAMPLERATE			(AVSYS_STATE_WARING | AVSYS_IN_SAMPLERATE)
#define AVSYS_STATE_WAR_INVALID_LAYER				(AVSYS_STATE_WARING | AVSYS_IN_LAYER)
#define AVSYS_STATE_WAR_INVALID_ROTATE				(AVSYS_STATE_WARING | AVSYS_IN_ROTATE)
#define AVSYS_STATE_WAR_NULL_POINTER				(AVSYS_STATE_WARING | AVSYS_IN_POINTER)
#define AVSYS_STATE_WAR_UNDERRUN					(AVSYS_STATE_WARING | AVSYS_IN_UNDERRUN)
#define AVSYS_STATE_WAR_OVERRUN						(AVSYS_STATE_WARING | AVSYS_IN_OVERRUN)
#define AVSYS_STATE_WAR_RANGE_OVER					(AVSYS_STATE_WARING | AVSYS_IN_RANGE_OVER)
#define AVSYS_STATE_WAR_RANGE_UNDER					(AVSYS_STATE_WARING | AVSYS_IN_RANGE_UNDER)
#define AVSYS_STATE_WAR_ALLOCATION					(AVSYS_STATE_WARING | AVSYS_IN_ALLOC)
#define AVSYS_STATE_WAR_INTERNAL					(AVSYS_STATE_WARING | AVSYS_IN_INTERNAL)
/*Extra warning for camera*/
#define AVSYS_STATE_WAR_IO_CONTROL					(AVSYS_STATE_WARING | AVSYS_IN_IO_CONTROL)
#define AVSYS_STATE_WAR_UNAVAILABLE_DEVICE			(AVSYS_STATE_WARING | AVSYS_IN_DEVICE)
#define AVSYS_STATE_WAR_DEVICE_WAIT_TIMEOUT			(AVSYS_STATE_WARING | AVSYS_IN_WAIT_RES)
#define AVSYS_STATE_WAR_DEVICE_NOT_SUPPORT			(AVSYS_STATE_WARING | AVSYS_IN_SUPPORT)
#define AVSYS_STATE_WAR_INVALID_STATE_TRANSITION	(AVSYS_STATE_WARING | AVSYS_IN_STATE)

/**
 *  AVSYS_ERROR
 */
#define AVSYS_STATE_ERR_INVALID_PARAMETER			(AVSYS_STATE_ERROR | AVSYS_IN_PARAMETER)
#define AVSYS_STATE_ERR_INVALID_HANDLE				(AVSYS_STATE_ERROR | AVSYS_IN_HANDLE)
#define AVSYS_STATE_ERR_INVALID_VALUE				(AVSYS_STATE_ERROR | AVSYS_IN_VALUE)
#define AVSYS_STATE_ERR_INVALID_MODE				(AVSYS_STATE_ERROR | AVSYS_IN_MODE)
#define AVSYS_STATE_ERR_INVALID_FORMAT				(AVSYS_STATE_ERROR | AVSYS_IN_FORMAT)
#define AVSYS_STATE_ERR_INVALID_CHANNEL				(AVSYS_STATE_ERROR | AVSYS_IN_CHANNEL)
#define AVSYS_STATE_ERR_INVALID_SAMPLERATE			(AVSYS_STATE_ERROR | AVSYS_IN_SAMPLERATE)
#define AVSYS_STATE_ERR_INVALID_LAYER				(AVSYS_STATE_ERROR | AVSYS_IN_LAYER)
#define AVSYS_STATE_ERR_INVALID_ROTATE				(AVSYS_STATE_ERROR | AVSYS_IN_ROTATE)
#define AVSYS_STATE_ERR_NULL_POINTER				(AVSYS_STATE_ERROR | AVSYS_IN_POINTER)
#define AVSYS_STATE_ERR_UNDERRUN					(AVSYS_STATE_ERROR | AVSYS_IN_UNDERRUN)
#define AVSYS_STATE_ERR_OVERRUN						(AVSYS_STATE_ERROR | AVSYS_IN_OVERRUN)
#define AVSYS_STATE_ERR_RANGE_OVER					(AVSYS_STATE_ERROR | AVSYS_IN_RANGE_OVER)
#define AVSYS_STATE_ERR_RANGE_UNDER					(AVSYS_STATE_ERROR | AVSYS_IN_RANGE_UNDER)
#define AVSYS_STATE_ERR_ALLOCATION					(AVSYS_STATE_ERROR | AVSYS_IN_ALLOC)
#define AVSYS_STATE_ERR_INTERNAL					(AVSYS_STATE_ERROR | AVSYS_IN_INTERNAL)
#define AVSYS_STATE_ERR_UNKNOWN						(AVSYS_STATE_ERROR | AVSYS_IN_UNKNOWN)  /**< unknown error */
/*Extra warning for camera*/
#define AVSYS_STATE_ERR_IO_CONTROL					(AVSYS_STATE_ERROR | AVSYS_IN_IO_CONTROL)
#define AVSYS_STATE_ERR_UNAVAILABLE_DEVICE			(AVSYS_STATE_ERROR | AVSYS_IN_DEVICE)
#define AVSYS_STATE_ERR_DEVICE_WAIT_TIMEOUT			(AVSYS_STATE_ERROR | AVSYS_IN_WAIT_RES)
#define AVSYS_STATE_ERR_DEVICE_NOT_SUPPORT			(AVSYS_STATE_ERROR | AVSYS_IN_SUPPORT)
#define AVSYS_STATE_ERR_INVALID_STATE				(AVSYS_STATE_ERROR | AVSYS_IN_STATE)
#define AVSYS_STATE_ERR_PRIVILEGE					(AVSYS_STATE_ERROR | AVSYS_IN_PRIVILEGE)


#define AVSYS_FAIL(_A_)						(AVSYS_STATE_ERROR & (_A_))
#define AVSYS_SUCCESS(_A_)					(!AVSYS_FAIL(_A_))
#define AVSYS_WARING(_A_)					(AVSYS_STATE_WARING & (_A_))
#define AVSYS_ERROR(_A_)					(AVSYS_STATE_ERROR & (_A_))

#ifdef __cplusplus
	}
#endif

#endif /* __AVSYS_ERROR_H__ */
